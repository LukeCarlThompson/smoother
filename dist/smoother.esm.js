function Smoother(){for(var t=this,a=[],n=arguments.length;n--;)a[n]=arguments[n];this.animating=!1;var i,o=[],e=0,p=25;a.map(function(a){void 0!==a.propName?(t[a.propName]={},t[a.propName].damping=a.damping||p,t[a.propName].input=a.input||e,t[a.propName].velocityCache=[],t[a.propName].output=t[a.propName].input,o.push(t[a.propName])):t.callback=a});var c=function(){var a;cancelAnimationFrame(i),t.animating=!0,o.forEach(function(t){!function(t){var a=t.output-t.input;t.velocityCache.unshift(a);var n=t.velocityCache.reduce(function(t,a){return a+t})/t.velocityCache.length;t.velocityCache.splice(10);var i,o,e,p,c=t.damping*(.3-(i=.02))/100+i,r=(o=t.output,e=t.input,o*(1-(p=c))+e*p);t.output=r,t.velocity=n}(t)}),(a=t).callback.apply(a,o),o.every(function(t){return Math.abs(t.output-t.input)<.5})?(t.animating=!1,console.log("finished smoother animation")):(cancelAnimationFrame(i),i=requestAnimationFrame(c))};this.animate=function(){t.animating||c()}}export default Smoother;